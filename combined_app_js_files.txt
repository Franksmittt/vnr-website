

// === layout.js ===

import { Inter } from 'next/font/google'
import './globals.css'
// Use relative paths instead of the alias
import Header from '../components/Header'
import Footer from '../components/Footer'

const inter = Inter({ subsets: ['latin'] })

// The rest of the file stays the same...
export const metadata = {
  title: 'VNR',
  description: 'Facilitating sustainable wealth through relevant knowledge and cutting-edge technology.',
}

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Header />
        <main>
          {children}
        </main>
        <Footer />
      </body>
    </html>
  )
}

// === page.js ===

import Slider from '../components/Slider';
import LeadershipSection from '../components/LeadershipSection';
import CoreServicesSection from '../components/CoreServicesSection';
import ServicesWeProvideSection from '../components/ServicesWeProvideSection';
import ConsultationSection from '../components/ConsultationSection';
import LatestNewsSection from '../components/LatestNewsSection';

export default function Home() {
  return (
    <>
      <Slider />
      <LeadershipSection />
      <CoreServicesSection />
      <ServicesWeProvideSection />
      <ConsultationSection />
      <LatestNewsSection />
    </>
  );
}

// === contact\page.jsx ===

'use client';
import React from 'react';
import { Mail, Phone, Building, Clock } from 'lucide-react';
import ContactHero from '@/components/ContactHero';
import InfoCard from '@/components/InfoCard';
import FaqItem from '@/components/FaqItem';

const ContactPage = () => {
  const faqs = [
    { q: "Do I need an appointment?", a: "<p>While we do our best to accommodate walk-ins, we highly recommend scheduling an appointment to ensure we can dedicate the appropriate time and expertise to your specific needs without interruption.</p>" },
    { q: "What should I bring to my first consultation?", a: "<p>For an initial consultation, it's helpful to bring any relevant financial statements, tax documents, CIPC documents, or specific correspondence you wish to discuss. This allows us to have a more productive and insightful meeting.</p>" },
    { q: "Is there parking available?", a: "<p>Yes, there is ample and secure parking available for our clients at our offices in Eldoraigne, Centurion.</p>" },
  ];

  return (
    <>
      <ContactHero />

      <div className="container mx-auto px-4 py-16 sm:py-24">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-16">
          
          {/* --- Left Column: Contact Form --- */}
          <div className="bg-slate-50 p-8 rounded-xl shadow-lg">
            <h2 className="text-2xl font-bold text-slate-900 mb-6">Send us a Message</h2>
            <form action="#" method="POST" className="space-y-6">
              <div>
                <label htmlFor="full-name" className="block text-sm font-medium text-slate-700">Full Name</label>
                <input type="text" name="full-name" id="full-name" autoComplete="name" className="mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md shadow-sm placeholder-slate-400 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm" />
              </div>
              <div>
                <label htmlFor="email" className="block text-sm font-medium text-slate-700">Email Address</label>
                <input type="email" name="email" id="email" autoComplete="email" className="mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md shadow-sm placeholder-slate-400 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm" />
              </div>
              <div>
                <label htmlFor="phone-number" className="block text-sm font-medium text-slate-700">Phone Number (Optional)</label>
                <input type="tel" name="phone-number" id="phone-number" autoComplete="tel" className="mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md shadow-sm placeholder-slate-400 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm" />
              </div>
              <div>
                <label htmlFor="message" className="block text-sm font-medium text-slate-700">Message</label>
                <textarea id="message" name="message" rows={4} className="mt-1 block w-full px-3 py-2 bg-white border border-slate-300 rounded-md shadow-sm placeholder-slate-400 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm"></textarea>
              </div>
              <div>
                <button type="submit" className="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                  Send Message
                </button>
              </div>
            </form>
          </div>

          {/* --- Right Column: Contact Details & Map --- */}
          <div className="space-y-12">
            <div className="space-y-8">
              <InfoCard icon={<Mail size={24}/>} title="Email Address">
                <a href="mailto:info@vnr.co.za" className="text-teal-600 hover:text-teal-700">info@vnr.co.za</a>
              </InfoCard>
              <InfoCard icon={<Phone size={24}/>} title="Phone Number">
                <a href="tel:+27126531633" className="text-teal-600 hover:text-teal-700">+27 12 653 1633</a>
              </InfoCard>
              <InfoCard icon={<Building size={24}/>} title="Office Address">
                <p>1022 Saxby Avenue, Eldoraigne<br/>Centurion, 0157, South Africa</p>
              </InfoCard>
              <InfoCard icon={<Clock size={24}/>} title="Business Hours">
                <p>Mon - Fri: 08:00 - 16:30</p>
                <p>Sat - Sun: Closed</p>
              </InfoCard>
            </div>
            <div className="h-64 rounded-lg overflow-hidden">
              <iframe 
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3588.666601413813!2d28.17116537540679!3d-25.912756877253535!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x1e95645517f6923b%3A0x6288602b9348d613!2s1022%20Saxby%20Ave%2C%20Eldoraigne%2C%20Centurion%2C%200157!5e0!3m2!1sen!2sza!4v1720947781358!5m2!1sen!2sza"
                width="100%" 
                height="100%" 
                style={{ border:0 }} 
                allowFullScreen="" 
                loading="lazy" 
                referrerPolicy="no-referrer-when-downgrade"
                title="VNR Office Location"
              ></iframe>
            </div>
          </div>
        </div>
      </div>

      <div className="bg-slate-50">
        <div className="container mx-auto px-4 py-16 sm:py-24 max-w-4xl">
          <h2 className="text-3xl font-bold text-slate-900 text-center mb-8">Quick Questions</h2>
            {faqs.map((faq, index) => (
                <FaqItem key={index} question={faq.q}>
                    {faq.a}
                </FaqItem>
            ))}
        </div>
      </div>
    </>
  );
};

export default ContactPage;

// === insights\page.js ===

'use client';
import React, { useState } from 'react';
import { Search } from 'lucide-react';
import InsightsHero from '@/components/InsightsHero';
import FeaturedArticleCard from '@/components/FeaturedArticleCard';
import ArticleCard from '@/components/ArticleCard';
import SubscriptionCTA from '@/components/SubscriptionCTA';
import { allArticles } from '@/lib/articlesData';

const InsightsPage = () => {
    const featuredArticle = allArticles.find(a => a.featured);
    // Ensure regularArticles doesn't include the featured one
    const regularArticles = allArticles.filter(a => !a.featured); 
    
    const categories = ["All", "Taxation", "Business Growth", "Technology", "Compliance", "Legacy Planning"];
    const [activeCategory, setActiveCategory] = useState("All");
    const [searchTerm, setSearchTerm] = useState("");

    const filteredArticles = regularArticles
        .filter(article => activeCategory === "All" || article.category === activeCategory)
        .filter(article => {
            const term = searchTerm.toLowerCase();
            const title = article.title || '';
            const excerpt = article.excerpt || ''; 
            return title.toLowerCase().includes(term) || excerpt.toLowerCase().includes(term);
        });

    return (
        <>
            <InsightsHero />
            
            <div className="py-16 sm:py-24 bg-slate-100">
                {featuredArticle && <FeaturedArticleCard article={featuredArticle} />}

                <div className="container mx-auto px-4 mt-16">
                    <div className="flex flex-col md:flex-row justify-between items-center gap-6 mb-12">
                        <div className="flex flex-wrap gap-2">
                            {categories.map(cat => (
                                <button 
                                    key={cat}
                                    onClick={() => setActiveCategory(cat)}
                                    className={`px-4 py-2 text-sm font-semibold rounded-full transition-colors ${activeCategory === cat ? 'bg-blue-700 text-white' : 'bg-white text-slate-700 hover:bg-slate-200'}`}
                                >
                                    {cat}
                                </button>
                            ))}
                        </div>
                        <div className="relative w-full md:w-auto">
                            <input 
                                type="search" 
                                placeholder="Search articles..." 
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                                className="w-full md:w-64 pl-10 pr-4 py-2 border border-slate-300 rounded-full" 
                            />
                            <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-slate-400" />
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                        {filteredArticles.map((article) => (
                            <ArticleCard key={article.url} article={article} />
                        ))}
                    </div>
                    
                    {filteredArticles.length === 0 && (
                        <div className="text-center py-16">
                            <h3 className="text-xl font-semibold text-slate-700">No articles found</h3>
                            <p className="text-slate-500 mt-2">Try adjusting your search or category filters.</p>
                        </div>
                    )}
                </div>
            </div>

            <SubscriptionCTA />
        </>
    );
};

export default InsightsPage;

// === insights\[slug]\page.js ===

import { allArticles } from '@/lib/articlesData';
import ArticleHero from '@/components/ArticleHero';
import ArticleSidebar from '@/components/ArticleSidebar';
import KeyTakeaways from '@/components/KeyTakeaways';
import TableOfContents from '@/components/TableOfContents';
import ShareArticle from '@/components/ShareArticle';

// This function finds the correct article based on the URL slug
function getArticle(slug) {
  // We add the /insights/ prefix to match the URL in the data
  const fullUrl = `/insights/${slug}`;
  return allArticles.find((article) => article.url === fullUrl);
}

export default function SinglePostPage({ params }) {
  const { slug } = params;
  const article = getArticle(slug);

  if (!article) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h1 className="text-2xl font-bold">Article Not Found</h1>
      </div>
    );
  }

  // Find related posts (excluding the current one)
  const relatedPosts = allArticles.filter(p => p.url !== article.url && p.category === article.category).slice(0, 3);

  return (
    <div className="bg-white">
      <style>{`
        .article-body h3 { font-size: 1.5rem; line-height: 2rem; font-weight: 700; color: #1e293b; margin-top: 2.5em; margin-bottom: 1em; }
        .article-body p { line-height: 1.75; margin-bottom: 1.25em; color: #475569; }
        .article-body p.lead { font-size: 1.125rem; line-height: 1.75rem; color: #334155; }
        .article-body ul { list-style-type: disc; padding-left: 1.5em; margin-bottom: 1.25em; }
        .article-body li { margin-bottom: 0.5em; padding-left: 0.5em; color: #475569; }
        .article-body blockquote { background-color: #eff6ff; border-left: 4px solid #3b82f6; padding: 1rem; margin-top: 1.5em; margin-bottom: 1.5em; font-style: italic; font-weight: 600; color: #1e3a8a; }
        .article-body a { color: #0d9488; text-decoration: underline; transition: color 0.2s ease-in-out; }
        .article-body a:hover { color: #0f766e; }
      `}</style>
      <main>
        <ArticleHero article={article} />
        <div className="bg-slate-50 py-16 sm:py-24">
          <div className="container mx-auto px-4">
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
              <div className="lg:col-span-2">
                {article.takeaways && <KeyTakeaways takeaways={article.takeaways} />}
                {article.toc && <TableOfContents sections={article.toc} />}
                <article 
                  className="article-body"
                  dangerouslySetInnerHTML={{ __html: article.content }}
                />
                <ShareArticle title={article.title} url={`https://www.vnr.co.za${article.url}`} />
              </div>
              <ArticleSidebar author={article.author} relatedPosts={relatedPosts} />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

// === services\page.js ===

import ServicesOverview from '@/components/ServicesOverview';
import WhyChooseVnr from '@/components/WhyChooseVnr';
import CallToAction from '@/components/CallToAction';

const ServicesPage = () => (
  <>
    <ServicesOverview />
    <WhyChooseVnr />
    <CallToAction />
  </>
);

export default ServicesPage;

// === services\[slug]\page.js ===

import { services } from '@/lib/servicesData';
import ServiceHero from '@/components/ServiceHero';
import LeadExpertCard from '@/components/LeadExpertCard';
import FaqItem from '@/components/FaqItem';
import RelatedServices from '@/components/RelatedServices';
import CallToAction from '@/components/CallToAction';


function getService(slug) {
  return services.find((service) => service.slug === slug);
}

export default function ServicePage({ params }) {
  const { slug } = params;
  const service = getService(slug);

  if (!service) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h1 className="text-2xl font-bold">Service Not Found</h1>
      </div>
    );
  }

  return (
    <>
      <ServiceHero 
        title={service.title}
        subtitle={service.subtitle}
        imageUrl={service.imageUrl}
      />

      <div className="bg-slate-50 py-16 sm:py-24">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
            <article className="lg:col-span-2 space-y-12">
              <section dangerouslySetInnerHTML={{ __html: service.content }} />
              
              <section>
                <h3 className="text-2xl font-bold text-slate-900 tracking-tight">Frequently Asked Questions</h3>
                <div className="mt-6">
                  {service.faqs.map((faq, index) => (
                    <FaqItem key={index} question={faq.q}>
                      {faq.a}
                    </FaqItem>
                  ))}
                </div>
              </section>
            </article>

            <aside className="space-y-8">
              <LeadExpertCard
                name={service.leadExpert.name}
                title={service.leadExpert.title}
                imageUrl={service.leadExpert.imageUrl}
              >
                {service.leadExpert.bio}
              </LeadExpertCard>
            </aside>
          </div>
        </div>
      </div>

      <RelatedServices />
      <CallToAction />
    </>
  );
}

// === team\page.js ===

import TeamHero from '../../components/TeamHero';
import TeamMemberCard from '../../components/TeamMemberCard';
import JoinTeamCTA from '../../components/JoinTeamCTA';

const TeamPage = () => {
  const teamMembers = [
    {
      name: "Jannie Venter",
      title: "Co-Founder & Director",
      bio: "With a postgraduate certification in Advanced Taxation, Jannie is a leading expert in tax advisory, helping clients navigate complex fiscal landscapes.",
      imageUrl: "/images/team/jannie-venter.jpg", // Local image path
      profileUrl: "/team/jannie-venter",
      linkedinUrl: "#"
    },
    {
      name: "Charlie Naudé",
      title: "Co-Founder & Director",
      bio: "A former Vice-Chairman of the SAIPA national board, Charlie's expertise in corporate governance shapes the firm's strategic direction.",
      imageUrl: "/images/team/charlie-naude.jpg", // Local image path
      profileUrl: "/team/charlie-naude",
      linkedinUrl: "#"
    },
    {
      name: "Henry Landsberg",
      title: "Accounting & Tax Manager",
      bio: "An award-winning professional, Henry manages our accounting and compliance divisions, ensuring meticulous accuracy and efficiency.",
      imageUrl: "/images/team/henry-landsberg.jpg", // Local image path
      profileUrl: "/team/henry-landsberg",
      linkedinUrl: "#"
    }
  ];

  return (
    <>
      <TeamHero />
      <div className="bg-slate-100 py-16 sm:py-24">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {teamMembers.map((member) => (
              <TeamMemberCard key={member.name} member={member} />
            ))}
          </div>
        </div>
      </div>
      <JoinTeamCTA />
    </>
  );
};

export default TeamPage;

// === team\[slug]\page.js ===

import { teamMembers } from '@/lib/teamData'; // Corrected import path
import TeamMemberHero from '@/components/TeamMemberHero'; // Corrected import path
import TeamMemberSidebar from '@/components/TeamMemberSidebar'; // Corrected import path

// This function finds the correct team member based on the URL
function getMember(slug) {
  return teamMembers.find((member) => member.slug === slug);
}

export default function TeamMemberPage({ params }) {
  // The `params` object contains the slug from the URL
  const { slug } = params;
  const member = getMember(slug);

  // If no member is found for the slug, show a "not found" message
  if (!member) {
    return (
      <div className="container mx-auto py-16 text-center">
        <h1 className="text-2xl font-bold">Team Member Not Found</h1>
      </div>
    );
  }

  return (
    <div className="bg-white">
      <style>{`
        .article-body h3 { font-size: 1.5rem; line-height: 2rem; font-weight: 700; color: #1e293b; margin-top: 2.5em; margin-bottom: 1em; }
        .article-body p { line-height: 1.75; margin-bottom: 1.25em; color: #475569; }
        .article-body ul { list-style-type: disc; padding-left: 1.5em; margin-bottom: 1.25em; }
        .article-body li { margin-bottom: 0.5em; padding-left: 0.5em; color: #475569; }
      `}</style>
      <main>
        <TeamMemberHero member={member} />
        
        <div className="bg-slate-50 py-16 sm:py-24">
          <div className="container mx-auto px-4">
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
              <article 
                className="lg:col-span-2 article-body"
                dangerouslySetInnerHTML={{ __html: member.bio }}
              />
              <TeamMemberSidebar member={member} />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};